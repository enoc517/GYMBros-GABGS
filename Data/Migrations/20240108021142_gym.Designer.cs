// <auto-generated />
using System;
using GYMBros_GABGS.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GYMBros_GABGS.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240108021142_gym")]
    partial class gym
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GYMBros_GABGS.Models.Actividade", b =>
                {
                    b.Property<int>("Idactividades")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IDActividades");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Idactividades"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Idactividades");

                    b.ToTable("Actividades");
                });

            modelBuilder.Entity("GYMBros_GABGS.Models.CategoriaMembresium", b =>
                {
                    b.Property<int>("IdcategoriaMembresia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IDCategoriaMembresia");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdcategoriaMembresia"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("IdcategoriaMembresia");

                    b.ToTable("CategoriaMembresia");
                });

            modelBuilder.Entity("GYMBros_GABGS.Models.CategoriaProducto", b =>
                {
                    b.Property<int>("IdcategoriaProducto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IDCategoriaProducto");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdcategoriaProducto"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdcategoriaProducto");

                    b.ToTable("CategoriaProducto", (string)null);
                });

            modelBuilder.Entity("GYMBros_GABGS.Models.Clase", b =>
                {
                    b.Property<int>("Idclase")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IDClase");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Idclase"));

                    b.Property<int>("Capacidad")
                        .HasColumnType("int");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<DateOnly>("FechaClase")
                        .HasColumnType("date");

                    b.Property<TimeOnly>("HoraFin")
                        .HasColumnType("time");

                    b.Property<TimeOnly>("HoraInicio")
                        .HasColumnType("time");

                    b.Property<int>("Idactividad")
                        .HasColumnType("int")
                        .HasColumnName("IDActividad");

                    b.Property<int>("Idempleado")
                        .HasColumnType("int")
                        .HasColumnName("IDEmpleado");

                    b.Property<int>("Idmatricula")
                        .HasColumnType("int")
                        .HasColumnName("IDMatricula");

                    b.Property<int>("Idsala")
                        .HasColumnType("int")
                        .HasColumnName("IDSala");

                    b.HasKey("Idclase");

                    b.HasIndex("Idactividad");

                    b.HasIndex("Idempleado");

                    b.HasIndex("Idmatricula");

                    b.HasIndex("Idsala");

                    b.ToTable("Clases");
                });

            modelBuilder.Entity("GYMBros_GABGS.Models.Cliente", b =>
                {
                    b.Property<int>("Idcliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IDCliente");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Idcliente"));

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<int>("Cedula")
                        .HasColumnType("int");

                    b.Property<string>("Dirrecion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EstadoCliente")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateOnly>("FechaNacimento")
                        .HasColumnType("date");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SesionesRayosUva")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("SesionesRayosUVA");

                    b.Property<int>("Telefono")
                        .HasColumnType("int");

                    b.HasKey("Idcliente");

                    b.ToTable("Cliente", (string)null);
                });

            modelBuilder.Entity("GYMBros_GABGS.Models.ClienteMembresium", b =>
                {
                    b.Property<int>("IdclienteMembresia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IDClienteMembresia");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdclienteMembresia"));

                    b.Property<DateOnly>("FechaFin")
                        .HasColumnType("date");

                    b.Property<DateOnly>("FechaInicio")
                        .HasColumnType("date");

                    b.Property<DateOnly>("FechaProxRenovacion")
                        .HasColumnType("date");

                    b.Property<int>("IdcategoraMembresia")
                        .HasColumnType("int")
                        .HasColumnName("IDCategoraMembresia");

                    b.Property<int>("Idcliente")
                        .HasColumnType("int")
                        .HasColumnName("IDCliente");

                    b.HasKey("IdclienteMembresia");

                    b.HasIndex("IdcategoraMembresia");

                    b.HasIndex("Idcliente");

                    b.ToTable("ClienteMembresia");
                });

            modelBuilder.Entity("GYMBros_GABGS.Models.DetalleFactura", b =>
                {
                    b.Property<int>("IdDetalleFactura")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_DetalleFactura");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDetalleFactura"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<decimal>("Descuento")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("PrecioUnidad")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("IdDetalleFactura");

                    b.ToTable("DetalleFactura", (string)null);
                });

            modelBuilder.Entity("GYMBros_GABGS.Models.Empleado", b =>
                {
                    b.Property<int>("Idempleado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IDEmpleado");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Idempleado"));

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("CategoriaProfesional")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Cedula")
                        .HasColumnType("int");

                    b.Property<int>("CuentaBancaria")
                        .HasColumnType("int");

                    b.Property<string>("Dirreccion")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<DateOnly>("FechaContratacion")
                        .HasColumnType("date");

                    b.Property<DateOnly>("FechaPago")
                        .HasColumnType("date");

                    b.Property<int>("Idpuesto")
                        .HasColumnType("int")
                        .HasColumnName("IDPuesto");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("NumSeguridadSocial")
                        .HasColumnType("int");

                    b.Property<int>("RetencionCcss")
                        .HasColumnType("int")
                        .HasColumnName("RetencionCCSS");

                    b.Property<int>("Telefono")
                        .HasColumnType("int");

                    b.HasKey("Idempleado");

                    b.HasIndex("Idpuesto");

                    b.ToTable("Empleados");
                });

            modelBuilder.Entity("GYMBros_GABGS.Models.FacturaCliente", b =>
                {
                    b.Property<int>("Idfactura")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IDFactura");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Idfactura"));

                    b.Property<DateOnly>("FechaEmicion")
                        .HasColumnType("date");

                    b.Property<int>("IdclienteMembresia")
                        .HasColumnType("int")
                        .HasColumnName("IDClienteMembresia");

                    b.Property<string>("MetodoPago")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Idfactura");

                    b.HasIndex("IdclienteMembresia");

                    b.ToTable("FacturaCliente", (string)null);
                });

            modelBuilder.Entity("GYMBros_GABGS.Models.FacturaPedido", b =>
                {
                    b.Property<int>("IdfacturaPedidos")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IDFacturaPedidos");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdfacturaPedidos"));

                    b.Property<DateOnly>("FechaPedido")
                        .HasColumnType("date");

                    b.Property<DateOnly>("FechaRecibido")
                        .HasColumnType("date");

                    b.Property<int>("IdDetalleFactura")
                        .HasColumnType("int")
                        .HasColumnName("ID_DetalleFactura");

                    b.Property<int>("Idempleado")
                        .HasColumnType("int")
                        .HasColumnName("IDEmpleado");

                    b.HasKey("IdfacturaPedidos");

                    b.HasIndex("IdDetalleFactura");

                    b.HasIndex("Idempleado");

                    b.ToTable("FacturaPedidos");
                });

            modelBuilder.Entity("GYMBros_GABGS.Models.GeneracionPago", b =>
                {
                    b.Property<int>("IdgeneracionPago")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IDGeneracionPago");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdgeneracionPago"));

                    b.Property<string>("DescripcionPago")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("EstadoDelPago")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Feriados")
                        .HasColumnType("int");

                    b.Property<int>("HorasExtras")
                        .HasColumnType("int");

                    b.Property<int>("Idjornadas")
                        .HasColumnType("int")
                        .HasColumnName("IDJornadas");

                    b.Property<double>("SalarioBruto")
                        .HasColumnType("float");

                    b.Property<string>("TipoPago")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdgeneracionPago");

                    b.HasIndex("Idjornadas");

                    b.ToTable("GeneracionPagos");
                });

            modelBuilder.Entity("GYMBros_GABGS.Models.HistortialPago", b =>
                {
                    b.Property<int>("IdhistorialPago")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IDHistorialPago");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdhistorialPago"));

                    b.Property<DateOnly>("FechaPago")
                        .HasColumnType("date");

                    b.Property<int>("IdgeneracionPagos")
                        .HasColumnType("int")
                        .HasColumnName("IDGeneracionPagos");

                    b.Property<decimal>("MontoTotal")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("IdhistorialPago");

                    b.HasIndex("IdgeneracionPagos");

                    b.ToTable("HistortialPagos");
                });

            modelBuilder.Entity("GYMBros_GABGS.Models.Jornada", b =>
                {
                    b.Property<int>("Idjornadas")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IDJornadas");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Idjornadas"));

                    b.Property<DateOnly>("FechaFin")
                        .HasColumnType("date");

                    b.Property<DateOnly>("FechaInicio")
                        .HasColumnType("date");

                    b.Property<decimal>("HorasTrabajadas")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("Idempleado")
                        .HasColumnType("int")
                        .HasColumnName("IDEmpleado");

                    b.HasKey("Idjornadas");

                    b.HasIndex("Idempleado");

                    b.ToTable("Jornadas");
                });

            modelBuilder.Entity("GYMBros_GABGS.Models.Martricula", b =>
                {
                    b.Property<int>("Idmatricula")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IDMatricula");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Idmatricula"));

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<int>("Idclase")
                        .HasColumnType("int")
                        .HasColumnName("IDClase");

                    b.Property<int>("Idcliente")
                        .HasColumnType("int")
                        .HasColumnName("IDCliente");

                    b.HasKey("Idmatricula");

                    b.HasIndex("Idcliente");

                    b.ToTable("Martricula", (string)null);
                });

            modelBuilder.Entity("GYMBros_GABGS.Models.Pedido", b =>
                {
                    b.Property<int>("Idpedido")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IDPedido");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Idpedido"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateOnly>("FechaCompra")
                        .HasColumnType("date");

                    b.Property<DateOnly>("FechaRecibido")
                        .HasColumnType("date");

                    b.Property<int>("Idempleado")
                        .HasColumnType("int")
                        .HasColumnName("IDEmpleado");

                    b.Property<int>("Idprovedores")
                        .HasColumnType("int")
                        .HasColumnName("IDProvedores");

                    b.HasKey("Idpedido");

                    b.HasIndex("Idempleado");

                    b.HasIndex("Idprovedores");

                    b.ToTable("Pedidos");
                });

            modelBuilder.Entity("GYMBros_GABGS.Models.ProductosVentum", b =>
                {
                    b.Property<int>("Idproductos")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IDProductos");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Idproductos"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<DateOnly>("FechaCaducidad")
                        .HasColumnType("date");

                    b.Property<int>("IdcategoriaProducto")
                        .HasColumnType("int")
                        .HasColumnName("IDCategoriaProducto");

                    b.Property<int>("Idprovedores")
                        .HasColumnType("int")
                        .HasColumnName("IDProvedores");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("PrecioUnitario")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Idproductos");

                    b.HasIndex("IdcategoriaProducto");

                    b.HasIndex("Idprovedores");

                    b.ToTable("ProductosVenta");
                });

            modelBuilder.Entity("GYMBros_GABGS.Models.Proveedore", b =>
                {
                    b.Property<int>("Idprovedores")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IDProvedores");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Idprovedores"));

                    b.Property<string>("CorreoElectronico")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("Idprovedores");

                    b.ToTable("Proveedores");
                });

            modelBuilder.Entity("GYMBros_GABGS.Models.Puesto", b =>
                {
                    b.Property<int>("Idpuesto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IDPuesto");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Idpuesto"));

                    b.Property<string>("CategoriaPuesto")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("PagoHora")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Idpuesto");

                    b.ToTable("Puesto", (string)null);
                });

            modelBuilder.Entity("GYMBros_GABGS.Models.Sala", b =>
                {
                    b.Property<int>("Idsala")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IDSala");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Idsala"));

                    b.Property<int>("Cupo")
                        .HasColumnType("int");

                    b.Property<string>("Descripción")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateOnly>("Dia")
                        .HasColumnType("date");

                    b.HasKey("Idsala");

                    b.ToTable("Sala", (string)null);
                });

            modelBuilder.Entity("GYMBros_GABGS.Models.SesionesUv", b =>
                {
                    b.Property<int>("Idsesiones")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IDSesiones");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Idsesiones"));

                    b.Property<int>("CantidadSesiones")
                        .HasColumnType("int");

                    b.Property<int>("Disponibles")
                        .HasColumnType("int");

                    b.Property<DateOnly>("FechaSesion")
                        .HasColumnType("date");

                    b.Property<TimeOnly>("HoraSesion")
                        .HasColumnType("time");

                    b.Property<int>("IdclienteMembresia")
                        .HasColumnType("int")
                        .HasColumnName("IDClienteMembresia");

                    b.HasKey("Idsesiones");

                    b.HasIndex("IdclienteMembresia");

                    b.ToTable("SesionesUV", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("GYMBros_GABGS.Models.Clase", b =>
                {
                    b.HasOne("GYMBros_GABGS.Models.Actividade", "IdactividadNavigation")
                        .WithMany("Clases")
                        .HasForeignKey("Idactividad")
                        .IsRequired()
                        .HasConstraintName("FK_Clases_Actividades");

                    b.HasOne("GYMBros_GABGS.Models.Empleado", "IdempleadoNavigation")
                        .WithMany("Clases")
                        .HasForeignKey("Idempleado")
                        .IsRequired()
                        .HasConstraintName("FK_Clases_Empleados");

                    b.HasOne("GYMBros_GABGS.Models.Martricula", "IdmatriculaNavigation")
                        .WithMany("Clases")
                        .HasForeignKey("Idmatricula")
                        .IsRequired()
                        .HasConstraintName("FK_Clases_Martricula");

                    b.HasOne("GYMBros_GABGS.Models.Sala", "IdsalaNavigation")
                        .WithMany("Clases")
                        .HasForeignKey("Idsala")
                        .IsRequired()
                        .HasConstraintName("FK_Clases_Sala");

                    b.Navigation("IdactividadNavigation");

                    b.Navigation("IdempleadoNavigation");

                    b.Navigation("IdmatriculaNavigation");

                    b.Navigation("IdsalaNavigation");
                });

            modelBuilder.Entity("GYMBros_GABGS.Models.ClienteMembresium", b =>
                {
                    b.HasOne("GYMBros_GABGS.Models.CategoriaMembresium", "IdcategoraMembresiaNavigation")
                        .WithMany("ClienteMembresia")
                        .HasForeignKey("IdcategoraMembresia")
                        .IsRequired()
                        .HasConstraintName("FK_ClienteMembresia_CategoriaMembresia");

                    b.HasOne("GYMBros_GABGS.Models.Cliente", "IdclienteNavigation")
                        .WithMany("ClienteMembresia")
                        .HasForeignKey("Idcliente")
                        .IsRequired()
                        .HasConstraintName("FK_ClienteMembresia_Cliente");

                    b.Navigation("IdcategoraMembresiaNavigation");

                    b.Navigation("IdclienteNavigation");
                });

            modelBuilder.Entity("GYMBros_GABGS.Models.Empleado", b =>
                {
                    b.HasOne("GYMBros_GABGS.Models.Puesto", "IdpuestoNavigation")
                        .WithMany("Empleados")
                        .HasForeignKey("Idpuesto")
                        .IsRequired()
                        .HasConstraintName("FK_Empleados_Puesto");

                    b.Navigation("IdpuestoNavigation");
                });

            modelBuilder.Entity("GYMBros_GABGS.Models.FacturaCliente", b =>
                {
                    b.HasOne("GYMBros_GABGS.Models.ClienteMembresium", "IdclienteMembresiaNavigation")
                        .WithMany("FacturaClientes")
                        .HasForeignKey("IdclienteMembresia")
                        .IsRequired()
                        .HasConstraintName("FK_FacturaCliente_ClienteMembresia");

                    b.Navigation("IdclienteMembresiaNavigation");
                });

            modelBuilder.Entity("GYMBros_GABGS.Models.FacturaPedido", b =>
                {
                    b.HasOne("GYMBros_GABGS.Models.DetalleFactura", "IdDetalleFacturaNavigation")
                        .WithMany("FacturaPedidos")
                        .HasForeignKey("IdDetalleFactura")
                        .IsRequired()
                        .HasConstraintName("FK_FacturaPedidos_DetalleFactura");

                    b.HasOne("GYMBros_GABGS.Models.Empleado", "IdempleadoNavigation")
                        .WithMany("FacturaPedidos")
                        .HasForeignKey("Idempleado")
                        .IsRequired()
                        .HasConstraintName("FK_FacturaPedidos_Empleados");

                    b.Navigation("IdDetalleFacturaNavigation");

                    b.Navigation("IdempleadoNavigation");
                });

            modelBuilder.Entity("GYMBros_GABGS.Models.GeneracionPago", b =>
                {
                    b.HasOne("GYMBros_GABGS.Models.Jornada", "IdjornadasNavigation")
                        .WithMany("GeneracionPagos")
                        .HasForeignKey("Idjornadas")
                        .IsRequired()
                        .HasConstraintName("FK_GeneracionPagos_Jornadas");

                    b.Navigation("IdjornadasNavigation");
                });

            modelBuilder.Entity("GYMBros_GABGS.Models.HistortialPago", b =>
                {
                    b.HasOne("GYMBros_GABGS.Models.GeneracionPago", "IdgeneracionPagosNavigation")
                        .WithMany("HistortialPagos")
                        .HasForeignKey("IdgeneracionPagos")
                        .IsRequired()
                        .HasConstraintName("FK_HistortialPagos_GeneracionPagos");

                    b.Navigation("IdgeneracionPagosNavigation");
                });

            modelBuilder.Entity("GYMBros_GABGS.Models.Jornada", b =>
                {
                    b.HasOne("GYMBros_GABGS.Models.Empleado", "IdempleadoNavigation")
                        .WithMany("Jornada")
                        .HasForeignKey("Idempleado")
                        .IsRequired()
                        .HasConstraintName("FK_Jornadas_Empleados");

                    b.Navigation("IdempleadoNavigation");
                });

            modelBuilder.Entity("GYMBros_GABGS.Models.Martricula", b =>
                {
                    b.HasOne("GYMBros_GABGS.Models.Cliente", "IdclienteNavigation")
                        .WithMany("Martriculas")
                        .HasForeignKey("Idcliente")
                        .IsRequired()
                        .HasConstraintName("FK_Martricula_Cliente");

                    b.Navigation("IdclienteNavigation");
                });

            modelBuilder.Entity("GYMBros_GABGS.Models.Pedido", b =>
                {
                    b.HasOne("GYMBros_GABGS.Models.Empleado", "IdempleadoNavigation")
                        .WithMany("Pedidos")
                        .HasForeignKey("Idempleado")
                        .IsRequired()
                        .HasConstraintName("FK_Pedidos_Empleados");

                    b.HasOne("GYMBros_GABGS.Models.Proveedore", "IdprovedoresNavigation")
                        .WithMany("Pedidos")
                        .HasForeignKey("Idprovedores")
                        .IsRequired()
                        .HasConstraintName("FK_Pedidos_Proveedores");

                    b.Navigation("IdempleadoNavigation");

                    b.Navigation("IdprovedoresNavigation");
                });

            modelBuilder.Entity("GYMBros_GABGS.Models.ProductosVentum", b =>
                {
                    b.HasOne("GYMBros_GABGS.Models.CategoriaProducto", "IdcategoriaProductoNavigation")
                        .WithMany("ProductosVenta")
                        .HasForeignKey("IdcategoriaProducto")
                        .IsRequired()
                        .HasConstraintName("FK_ProductosVenta_CategoriaProducto");

                    b.HasOne("GYMBros_GABGS.Models.Proveedore", "IdprovedoresNavigation")
                        .WithMany("ProductosVenta")
                        .HasForeignKey("Idprovedores")
                        .IsRequired()
                        .HasConstraintName("FK_ProductosVenta_Proveedores");

                    b.Navigation("IdcategoriaProductoNavigation");

                    b.Navigation("IdprovedoresNavigation");
                });

            modelBuilder.Entity("GYMBros_GABGS.Models.SesionesUv", b =>
                {
                    b.HasOne("GYMBros_GABGS.Models.ClienteMembresium", "IdclienteMembresiaNavigation")
                        .WithMany("SesionesUvs")
                        .HasForeignKey("IdclienteMembresia")
                        .IsRequired()
                        .HasConstraintName("FK_SesionesUV_ClienteMembresia");

                    b.Navigation("IdclienteMembresiaNavigation");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GYMBros_GABGS.Models.Actividade", b =>
                {
                    b.Navigation("Clases");
                });

            modelBuilder.Entity("GYMBros_GABGS.Models.CategoriaMembresium", b =>
                {
                    b.Navigation("ClienteMembresia");
                });

            modelBuilder.Entity("GYMBros_GABGS.Models.CategoriaProducto", b =>
                {
                    b.Navigation("ProductosVenta");
                });

            modelBuilder.Entity("GYMBros_GABGS.Models.Cliente", b =>
                {
                    b.Navigation("ClienteMembresia");

                    b.Navigation("Martriculas");
                });

            modelBuilder.Entity("GYMBros_GABGS.Models.ClienteMembresium", b =>
                {
                    b.Navigation("FacturaClientes");

                    b.Navigation("SesionesUvs");
                });

            modelBuilder.Entity("GYMBros_GABGS.Models.DetalleFactura", b =>
                {
                    b.Navigation("FacturaPedidos");
                });

            modelBuilder.Entity("GYMBros_GABGS.Models.Empleado", b =>
                {
                    b.Navigation("Clases");

                    b.Navigation("FacturaPedidos");

                    b.Navigation("Jornada");

                    b.Navigation("Pedidos");
                });

            modelBuilder.Entity("GYMBros_GABGS.Models.GeneracionPago", b =>
                {
                    b.Navigation("HistortialPagos");
                });

            modelBuilder.Entity("GYMBros_GABGS.Models.Jornada", b =>
                {
                    b.Navigation("GeneracionPagos");
                });

            modelBuilder.Entity("GYMBros_GABGS.Models.Martricula", b =>
                {
                    b.Navigation("Clases");
                });

            modelBuilder.Entity("GYMBros_GABGS.Models.Proveedore", b =>
                {
                    b.Navigation("Pedidos");

                    b.Navigation("ProductosVenta");
                });

            modelBuilder.Entity("GYMBros_GABGS.Models.Puesto", b =>
                {
                    b.Navigation("Empleados");
                });

            modelBuilder.Entity("GYMBros_GABGS.Models.Sala", b =>
                {
                    b.Navigation("Clases");
                });
#pragma warning restore 612, 618
        }
    }
}
